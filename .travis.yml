sudo: required
dist: trusty
language: node_js
node_js:
  - "6"
addons:
  firefox: "45.0"
before_script:
  # Chrome
  - export CHROME_BIN=/usr/bin/google-chrome
  - export DISPLAY=:99.0
  - sudo apt-get install -y libappindicator1 fonts-liberation
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
  - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  - sudo apt-get update && sudo apt-get install google-chrome-stable
  - sh -e /etc/init.d/xvfb start
  # Start chrome to initialize profile
  - google-chrome &
  - CHROME_PID=$!
  # Libsodium
  - sudo add-apt-repository -y ppa:chris-lea/libsodium
  - sudo apt-get update && sudo apt-get install -y libsodium-dev
  # Create test certificate for localhost
  - openssl req -new -newkey rsa:1024 -nodes -sha256 -out saltyrtc.csr -keyout saltyrtc.key -subj '/C=CH/O=SaltyRTC/CN=localhost/'
  - openssl x509 -req -days 365 -in saltyrtc.csr -signkey saltyrtc.key -out saltyrtc.crt
  # Add certificate to firefox and chrome
  - kill $CHROME_PID
  - sudo apt-get install -y libnss3-tools
  - mkdir ~/.mozilla/firefox/saltyrtc
  - certutil -d ~/.mozilla/firefox/saltyrtc -A -n saltyrtc-test-ca -t Ccw,, -i saltyrtc.crt
  - certutil -d sql:$HOME/.pki/nssdb -A -n saltyrtc-test-ca -t Ccw,, -i saltyrtc.crt
  # Start SaltyRTC server
  - git clone https://github.com/saltyrtc/saltyrtc-server-python -b master
  - export SALTYRTC_SERVER_PERMANENT_KEY=0919b266ce1855419e4066fc076b39855e728768e3afa773105edd2e37037c20
  - |
    cd saltyrtc-server-python
    pyvenv venv
    venv/bin/pip install .[logging]
    venv/bin/saltyrtc-server -v 5 serve -sc ../saltyrtc.crt -sk ../saltyrtc.key -p 8765 -k $SALTYRTC_SERVER_PERMANENT_KEY > serverlog.txt 2>&1 &
    export SALTYRTC_SERVER_PID=$!
    sleep 2
    cd ..
  # Rollup tests
  - export NODE_ENV=development
  - npm install && ls node_modules/
  - npm run rollup_tests
script:
  # Tests should work
  - npm test
  # Types should be OK
  - |
    mv tsconfig.json tsconfig.ignore
    node_modules/.bin/tsc --target ES2015 --noEmit src/main.ts
    mv tsconfig.ignore tsconfig.json
  # Building a distribution should work
  - npm run dist
after_script:
  # Stop SaltyRTC server
  - kill -INT $SALTYRTC_SERVER_PID
  # Print server log
  - |
    echo "---------- Server Log ----------\n"
    cat saltyrtc-server-python/serverlog.txt
    echo -e "\n---------- End Server Log ----------"
